name: PipelineDomainLayer
run-name: PipelineDomainLayer
on: 
  push:
    paths: 
      - '2024-1/infra/layers/domainServicesLayer/**'
jobs:
  execute-unit-tests-of-domain-with-pytest:
    timeout-minutes: 10
    runs-on: ubuntu-latest
    steps:
      - name: First step - Make a checkout
        uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11

      - name: Second step - Setup Pytest environment and execute unit tests of domain layer
        run: |
          cd 2024-1/infra/layers/domainServicesLayer
          python -m pip install -r requirements-test.txt
          pytest
      
      - name: Third step - Shows everything is OK!
        run: echo "Unit tests done!"
  build-and-deploy-in-aws:
    timeout-minutes: 5
    runs-on: ubuntu-latest
    steps:
      - name: First step - Make a checkout
        uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11

      - name: Second step - Setup SAM environment
        uses: aws-actions/setup-sam@c6696d35f45207ec9622ec3235f1997c660e1ab2

      - name: Third step - Configure AWS credentials
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID}}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY}}
          REGION: us-east-1
        run: |
          aws configure set aws_access_key_id $AWS_ACCESS_KEY_ID
          aws configure set aws_secret_access_key $AWS_SECRET_ACCESS_KEY
          aws configure set default.region $REGION
      - name: Fourth step - Execute build and deploy
        run: |
          cd 2024-1/infra/layers/domainServicesLayer
          sam build --use-container 
          sam deploy
      - name: Fifth step - Shows the latest version of the layer!
        run: aws lambda list-layer-versions --layer-name DomainServicesLambda --query 'LayerVersions[0].Version'